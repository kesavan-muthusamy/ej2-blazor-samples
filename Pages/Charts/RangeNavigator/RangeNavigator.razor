@page "/RangeSelector/RangeNavigator"
@using Syncfusion.EJ2.Blazor.Charts
@inject HttpClient Http
@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "RangeNavigator";
    SampleBrowser.CurrentControlName = "RangeNavigator";
    SampleBrowser.CurrentControlCategory = "RangeNavigator";
    SampleBrowser.CurrentControl = SampleBrowser.Config.RangeNavigator;
    SampleBrowser.ActionDescription = new string[] {
         @"<p>
        This sample visualizes the bitcoin price range with area series in the range navigator. Selected range values are enhanced with tooltip.
    </p>"
    };
    SampleBrowser.Description = new string[] {
         @"<p>
        In this example, you can see how to render and configure the Range Navigator.
        <code>AreaSeries</code> is used to represent selected data value.
    </p>"
    };
}
@*End:Hidden*@

@if (defaultData == null)
{
    <div class="stockchartloader"></div>
}
else
{
    <div class="control-section" align="center">
        <h4 id="default" style="font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;" align="center">Bitcoin (USD) Price Range</h4>
        <div id="container">
            <EjsRangeNavigator id="container" Value="@value" valueType=Syncfusion.EJ2.Blazor.Charts.RangeValueType.DateTime LabelFormat="MMM-yy">
                <RangeNavigatorStyleSettings UnselectedRegionColor="transparent"></RangeNavigatorStyleSettings>
                <RangeNavigatorRangeTooltipSettings Enable="true" DisplayMode="TooltipDisplayMode.Always" Format="MM/dd/yyyy"></RangeNavigatorRangeTooltipSettings>
                <RangeNavigatorSeriesCollection>
                    <RangeNavigatorSeries Fill="url(#material-gradient-chart)" DataSource="@defaultData" XName="x" type="RangeNavigatorType.Area" YName="y" Width="2"></RangeNavigatorSeries>
                </RangeNavigatorSeriesCollection>
            </EjsRangeNavigator>
        </div>
    </div>

}

@code{
    ChartData[] defaultData;
    protected override async Task OnInitAsync()
    {
        defaultData = await Http.GetJsonAsync<ChartData[]>("scripts/range-navigator/default_data.json");
    }
    class ChartData
    {
        public DateTime x { get; set; }
        public double y { get; set; }
    }
    DateTime[] value = new DateTime[] { new DateTime(2017, 09, 01), new DateTime(2018, 02, 01) };
}
<style>
    #control-container {
        padding: 0px !important;
    }

    #container {
        transform: translate(0, 25%);
    }

    #material-gradient-chart stop {
        stop-color: #00bdae;
    }

    #fabric-gradient-chart stop {
        stop-color: #4472c4;
    }

    #bootstrap-gradient-chart stop {
        stop-color: #a16ee5;
    }

    #bootstrap4-gradient-chart stop {
        stop-color: #a16ee5;
    }

    #highcontrast-gradient-chart stop {
        stop-color: #79ECE4;
    }

    .chart-gradient stop[offset="0"] {
        stop-opacity: 0.9;
    }

    .chart-gradient stop[offset="1"] {
        stop-opacity: 0.3;
    }
</style>
<svg style="height: 0">
    <defs>
        <linearGradient id="material-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fabric-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap4-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="highcontrast-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
    </defs>
</svg>
