@page "/Charts/PolarArea"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "PolarArea Chart";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the consumer price data with default line series in the chart.
        Data points are enhanced with marker and tooltip
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the line type charts. Line type charts are used to represent time-dependent data, showing trends in data at equal intervals.
        You can use <code>dashArray</code>, <code>width</code>, <code>fill</code> properties to customize the line. <code>marker</code> and <code>dataLabel</code> are used to represent individual data and its value.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>

    <p>
        More information on the line series can be found in this
        <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype"">documentation section</a>.
    </p>"
    };
}@*End:Hidden*@

<div class="control-section">
    <EjsChart id="container"  title="Average Sales Comparison">
        <ChartTooltipsettings enable="true">
        </ChartTooltipsettings>
        <ChartPrimaryXAxis Interval="1" Coefficient="100" LabelPlacement="LabelPlacement.OnTicks" ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category"></ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Revenue in Millios" LabelFormat="{value}M"></ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries dataSource="@dataSource" opacity=0.5 name="Product A" xName="x" width="2" yName="y" type="ChartSeriesType.Polar" drawType="ChartDrawType.Area">
                <ChartSeriesBorder Color="transparent" Width="0"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries dataSource="@dataSource" opacity=0.5 name="Product B" xName="x" width="2" yName="y1" type="ChartSeriesType.Polar" drawType="ChartDrawType.Area">
                <ChartSeriesBorder Color="transparent" Width="0"></ChartSeriesBorder>
            </ChartSeries>
            <ChartSeries dataSource="@dataSource" opacity=0.5 name="Product C" xName="x" width="2" yName="y2" type="ChartSeriesType.Polar" drawType="ChartDrawType.Area">
                <ChartSeriesBorder Color="transparent" Width="0"></ChartSeriesBorder>
            </ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>

@code{
    public class PolarAreaChartData
    {
        public string x;
        public double y;
        public double y1;
        public double y2;
    }
    List<PolarAreaChartData> dataSource = new List<PolarAreaChartData>
    {
          new PolarAreaChartData { x= "2000", y= 4  , y1= 2.6, y2= 2.8},
          new PolarAreaChartData { x= "2001", y= 3.0, y1= 2.8, y2= 2.5 },
          new PolarAreaChartData { x= "2002", y= 3.8, y1= 2.6, y2= 2.8 },
          new PolarAreaChartData { x= "2003", y= 3.4, y1= 3  , y2= 3.2 },
          new PolarAreaChartData { x= "2004", y= 3.2, y1= 3.6, y2= 2.9 },
          new PolarAreaChartData { x= "2005", y= 3.9, y1= 3  , y2= 2   }
    };
}