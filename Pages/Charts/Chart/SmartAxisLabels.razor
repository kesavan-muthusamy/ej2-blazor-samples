@page "/Charts/SmartAxisLabels"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Smart Axis Labels";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
       This sample illustrates the Rio Olympic’s gold medal count by using smart labels in the chart. The smart label placement for a series can be shown, when it contains more of points.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to arrange the axis labels and how to trim the axis label smartly. When the Axis labels overlap with each other based on the chart dimensions and label size, you can use the <code>labelIntersectAction</code> property of the axis to avoid overlapping.
    </p>
    <p>
        Chart supports the following by which can be set using <code>labelIntersectAction</code> property.
    </p>
    <ul>
            <li><code>Hide</code> - Hide the label when it intersect.</li>
            <li><code>Trim</code> - Trim the label when it intersect.</li>
            <li><code>Wrap</code> - Wrap the label when it intersect.</li>
            <li><code>MultipleRows</code> - Arrange the label in multiple row when it intersect.</li>
            <li><code>Rotate45</code> - Rotate the label to 45 degree when it intersect.</li>
            <li><code>Rotate90</code> - Rotate the label to 90 degree when it intersect.</li>
            <li><code>None</code> - Shows all the labels.</li>
        </ul>

    <br>
     <p>
            Chart supports three types of edge labels placement which can be set using <code>edgeLabelPlacement</code> property.
        </p>
    <ul>
            <li><code>None</code> - No action will be performed.</li>
            <li><code>Hide</code> - Edge label will be hidden .</li>
            <li><code>Shift</code> - Shifts the edge labels.</li>
        </ul>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart id="smartaxislabels" title="Internet Users in Millons">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category" Interval="1" LabelIntersectAction="LabelIntersectAction.Hide">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle> 
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisLabelStyle Size="0px"></ChartAxisLabelStyle>
        </ChartPrimaryYAxis>
        <ChartTooltipsettings Enable="true"></ChartTooltipsettings>
        <ChartSeriesCollection>
            <ChartSeries dataSource="@chartData" xName="x" yName="y" name="Germany" Opacity="1" width=2 type="ChartSeriesType.Column">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont Color="#ffffff" FontWeight="600"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
        <ChartLegendSettings Visible="false"></ChartLegendSettings>
    </EjsChart>
</div>

@code{
    public class CategoryData
    {
        public string x;
        public double y;
    }
 List<CategoryData> chartData = new List<CategoryData>
            {
                new CategoryData { x = "South Korea", y = 39 },
                new CategoryData { x = "India", y = 61 },
                new CategoryData { x = "Pakistan", y = 20 },
                new CategoryData { x = "Germany", y = 65 },
                new CategoryData { x = "Australia", y = 16 },
                new CategoryData { x = "Italy", y = 29 },
                new CategoryData { x = "France", y = 45 },
                new CategoryData { x = "United Arab Emirates", y = 10 },
                new CategoryData { x = "Russia", y = 41 },
                new CategoryData { x = "Mexico", y = 31 },
                new CategoryData { x = "Brazil", y = 76 },
                new CategoryData { x = "China", y = 51 },
             };
}
