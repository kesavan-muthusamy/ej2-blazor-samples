@page "/Charts/Column"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Column Chart";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the Olympic medal count in Rio with default column series in the chart.
        Data points values are showed by using data label.

    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the column type charts. Column type charts are used for comparing
        the frequency, count, total or average of data in different categories. You can use <code>border</code>,
        <code>fill</code> properties to customize the vertical rectangle. <code>dataLabel</code> is used to represent individual
        data and its value.

    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>

    <p>
        More information on the column series can be found in this
        <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype"">documentation section</a>.
    </p>"
    };
}
@*End:Hidden*@

<div class="control-section">
    <EjsChart id="column" title="Olympic Medal Counts - RIO">
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category" Interval="1">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis>
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisLabelStyle Color="transparent"></ChartAxisLabelStyle>
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartSeriesCollection>
            <ChartSeries dataSource="@dataSource" xName="x" yName="y" name="Gold" type="ChartSeriesType.Column">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont FontWeight="600" Color="#ffffff"></ChartDataLabelFont>
                        </ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
            <chartseries dataSource="@dataSource" xName="x" yName="y1" name="Silver" type="ChartSeriesType.Column">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont FontWeight="600" Color="#ffffff"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </chartseries>
            <chartseries dataSource="@dataSource" xName="x" yName="y2" name="Bronze" type="ChartSeriesType.Column">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                        <ChartDataLabelFont FontWeight="600" Color="#ffffff"></ChartDataLabelFont>
                    </ChartDataLabel>
                </ChartMarker>
            </chartseries>
        </ChartSeriesCollection>
        <ChartTooltipsettings enable="true"></ChartTooltipsettings>
    </EjsChart>
</div>

@code{

    public class ColumnChartData
    {
        public string x;
        public double y;
        public double y1;
        public double y2;
    }

    List<ColumnChartData> dataSource = new List<ColumnChartData>
    {
        new ColumnChartData { x= "USA", y= 46, y1= 37, y2= 38 },
        new ColumnChartData { x= "GBR", y= 27, y1= 23, y2= 17 },
        new ColumnChartData { x= "CHN", y= 26, y1= 18, y2= 26 }
    };    
}
