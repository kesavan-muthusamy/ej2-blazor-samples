@page "/Charts/RoundedColumn"
@using Syncfusion.EJ2.Blazor.Charts

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "RoundedColumn Chart";
    SampleBrowser.CurrentControlName = "Chart";
    SampleBrowser.CurrentControlCategory = "Chart";
    SampleBrowser.CurrentControl = SampleBrowser.Config.Chart;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
        This sample visualizes the Olympic medal count in Rio with default column series in the chart.
        Data points values are showed by using data label.
    </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
        In this example, you can see how to render and configure the column type charts. Column type charts are used for comparing
        the frequency, count, total or average of data in different categories. You can use <code>border</code>,
        <code>fill</code> properties to customize the vertical rect. <code>dataLabel</code> is used to represent individual
        data and its value.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>

    <p>
        More information on the rounded column series can be found in this
        <a target=""_blank"" href=""http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype"">documentation section</a>.
    </p>"
    };
}
@*End:Hidden*@

    <div class="control-section">
        <EjsChart id="roundedcolumn" title="Trade in Food Groups">
            <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
            <ChartPrimaryXAxis TickPosition="AxisPosition.Inside" LabelPosition="AxisPosition.Inside" ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category" Interval="1">
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                <ChartAxisLabelStyle Color="#ffffff"></ChartAxisLabelStyle>
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis minimum="0" maximum="300" interval="50">
                <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
                <ChartAxisLabelStyle Color="transparent"></ChartAxisLabelStyle>
                <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                <ChartAxisMinorGridLines Width="0"></ChartAxisMinorGridLines>
                <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
                <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
            </ChartPrimaryYAxis>
            <ChartSeriesCollection>
                <ChartSeries dataSource="@chartData" xName="x" yName="y" name="Tiger" type="ChartSeriesType.Column">
                    <ChartMarker>
                        <ChartDataLabel Visible="true" Position="LabelPosition.Top">
                            <ChartDataLabelFont FontWeight="600" Color="#ffffff"></ChartDataLabelFont>
                        </ChartDataLabel>
                    </ChartMarker>
                    <ChartCornerRadius bottomLeft="10" bottomRight="10" topLeft="10" topRight="10"></ChartCornerRadius>
                </ChartSeries>
            </ChartSeriesCollection>
            <ChartTooltipsettings enable="false"></ChartTooltipsettings>
            <ChartLegendSettings Visible="false"></ChartLegendSettings>
        </EjsChart>
    </div>

@code{

       public class RoundedColumnChartData
        {
            public string x;
            public double y;
            public string text;
        }

   List<RoundedColumnChartData> chartData = new List<RoundedColumnChartData>
            {
                  new RoundedColumnChartData { x= "Egg", y= 106, text= "Egg" },
                  new RoundedColumnChartData { x= "Fish", y= 103, text= "Fish" },
                  new RoundedColumnChartData { x= "Misc", y= 198, text= "Misc" },
                  new RoundedColumnChartData { x= "Tea", y= 189, text= "Tea" },
                  new RoundedColumnChartData { x= "Fruits", y= 250, text= "Fruits" }
            };   
}
